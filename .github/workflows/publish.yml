name: Publish to npm & Release on GitHub

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write
  packages: read

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build
        shell: bash
        run: |
          if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "No build script found, skipping."
          fi

      - name: Run tests
        shell: bash
        run: |
          if git ls-files "**/*.test.*" "**/*.spec.*" "**/__tests__/**/*" | grep -q .; then
            npm test --silent -- --passWithNoTests
          else
            echo "No tests found, skipping."
          fi

      - name: Read package version
        id: pkg
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Package version: $VERSION"

      - name: Check if tag already exists
        id: tagcheck
        shell: bash
        run: |
          TAG="v${{ steps.pkg.outputs.version }}"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Tag $TAG already exists. Skipping publish & release."
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Configure npm auth (npmjs)
        if: steps.tagcheck.outputs.exists == 'false'
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "registry=https://registry.npmjs.org" > .npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          echo "always-auth=true" >> .npmrc
          export NPM_CONFIG_USERCONFIG="$PWD/.npmrc"
          npm config get registry
          npm whoami

      - name: Publish to npm
        if: steps.tagcheck.outputs.exists == 'false'
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          export NPM_CONFIG_USERCONFIG="$PWD/.npmrc"
          npm publish --access public

      - name: Create git tag
        if: steps.tagcheck.outputs.exists == 'false'
        shell: bash
        run: |
          TAG="v${{ steps.pkg.outputs.version }}"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Create GitHub Release
        if: steps.tagcheck.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.pkg.outputs.version }}
          name: v${{ steps.pkg.outputs.version }}
          generate_release_notes: true
