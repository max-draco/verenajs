name: Publish to npm & Release on GitHub

permissions:
  contents: write   # create tag + release
  packages: read

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # we need tags for idempotency check

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # Build (optional but typical for libraries)
      - name: Build
        run: |
          if [ -f package.json ] && jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "No build script found, skipping."
          fi

      - name: Run tests
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test
          else
            echo "No test script found, skipping."
          fi

      - name: Read package version
        id: pkg
        run: echo "version=$(node -p \"require('./package.json').version\")" >> "$GITHUB_OUTPUT"

      - name: Check if tag already exists
        id: tagcheck
        run: |
          TAG="v${{ steps.pkg.outputs.version }}"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Tag $TAG already exists. Skipping npm publish & release."
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Authenticate to npm
        if: steps.tagcheck.outputs.exists == 'false'
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify package access
        if: steps.tagcheck.outputs.exists == 'false'
        run: npm whoami

      - name: Publish to npm
        if: steps.tagcheck.outputs.exists == 'false'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Add --access public for scoped public packages; keep it for normal ones too.
          # Add --provenance if your repo is public and you want SLSA provenance.
          npm publish --access public

      - name: Create git tag
        if: steps.tagcheck.outputs.exists == 'false'
        run: |
          TAG="v${{ steps.pkg.outputs.version }}"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Create GitHub Release
        if: steps.tagcheck.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.pkg.outputs.version }}
          name: v${{ steps.pkg.outputs.version }}
          generate_release_notes: true
